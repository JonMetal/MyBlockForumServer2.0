DROP TABLE IF EXISTS [user_user_karma]
DROP TABLE IF EXISTS [user_thread]
DROP TABLE IF EXISTS [message]
DROP TABLE IF EXISTS [thread]
DROP TABLE IF EXISTS [user]
DROP TABLE IF EXISTS [thread_theme]
DROP TABLE IF EXISTS [user_role]
DROP TABLE IF EXISTS [role]
DROP TABLE IF EXISTS [status]

CREATE TABLE [status](
	id UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
	title NVARCHAR(20) UNIQUE NOT NULL
);

INSERT INTO [status] (title) VALUES
('Не в сети'),
('Онлайн'),
('Спит')

CREATE TABLE [role](
	id UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
	title NVARCHAR(20) UNIQUE NOT NULL,
	[description] NVARCHAR(512)
);

INSERT INTO [role] (title, [description]) VALUES
('Лох', '')

CREATE TABLE [thread_theme](
	id UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
	title NVARCHAR(40) UNIQUE NOT NULL,
	[description] NVARCHAR(512)
);

CREATE TABLE [user](
	id UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
	[email] NVARCHAR(56) UNIQUE,
	[login] NVARCHAR(30) UNIQUE,
	[password] NVARCHAR(256),
	nickname NVARCHAR(20),
	[description] NVARCHAR(128),
	karma INT DEFAULT(0),
	status_id UNIQUEIDENTIFIER FOREIGN KEY REFERENCES status(id) NOT NULL,
	role_id UNIQUEIDENTIFIER FOREIGN KEY REFERENCES role(id) NOT NULL
);

CREATE TABLE [thread](
	id UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
	user_creator_id UNIQUEIDENTIFIER FOREIGN KEY REFERENCES [user](id) NOT NULL,
	title NVARCHAR(40) NOT NULL,
	description NVARCHAR(512),
	thread_theme_id UNIQUEIDENTIFIER FOREIGN KEY REFERENCES thread_theme(id) NOT NULL
);

CREATE TABLE [message](
	id UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
	[user_id] UNIQUEIDENTIFIER FOREIGN KEY REFERENCES [user](id) NOT NULL,
	[thread_id] UNIQUEIDENTIFIER FOREIGN KEY REFERENCES [thread](id) NOT NULL,
	[text] NVARCHAR(1024)
);

CREATE TABLE [user_thread](
	[user_id] UNIQUEIDENTIFIER FOREIGN KEY REFERENCES [user](id) NOT NULL,
	[thread_id] UNIQUEIDENTIFIER FOREIGN KEY REFERENCES [thread](id) NOT NULL,
	PRIMARY KEY ([user_id], [thread_id])
)

CREATE TABLE [user_user_karma](
	from_user_id UNIQUEIDENTIFIER FOREIGN KEY REFERENCES [user](id) NOT NULL,
	to_user_id UNIQUEIDENTIFIER FOREIGN KEY REFERENCES [user](id) NOT NULL,
	PRIMARY KEY (from_user_id, to_user_id)
);
